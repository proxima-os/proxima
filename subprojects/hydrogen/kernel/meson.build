linker_script = meson.current_source_dir() / 'kernel.lds'

stripped_vdso = custom_target(
    'stripped-vdso',
    command: [strip, '@INPUT@', '-o@OUTPUT@'],
    input: vdso,
    output: 'stripped-vdso.so',
)
vdso_object = custom_target(
    'vdso-object',
    command: [objcopy, '@INPUT@', '@OUTPUT@', '-Ibinary', '-Oelf64-x86-64', '--rename-section=.data=.vdso'],
    input: stripped_vdso,
    output: 'vdso.o',
)

executable(
    'hydrogen',
    'src/cpu/cpu.c',
    'src/cpu/exc.c',
    'src/cpu/gdt.c',
    'src/cpu/gdt.S',
    'src/cpu/idt.c',
    'src/cpu/idt.S',
    'src/cpu/lapic.c',
    'src/cpu/lapic.S',
    'src/cpu/tss.c',
    'src/cpu/xsave.c',
    'src/drv/acpi.c',
    'src/drv/hpet.c',
    'src/drv/pci.c',
    'src/drv/pic.c',
    'src/fs/ramfs.c',
    'src/fs/vfs.c',
    'src/init/initrd.c',
    'src/init/main.c',
    'src/init/main.S',
    'src/mem/heap.c',
    'src/mem/kvmm.c',
    'src/mem/pmap.c',
    'src/mem/pmm.c',
    'src/mem/vheap.c',
    'src/mem/vmm.c',
    'src/sched/exec.c',
    'src/sched/mutex.c',
    'src/sched/proc.c',
    'src/sched/sched.c',
    'src/sched/sched.S',
    'src/sched/sema.c',
    'src/sys/fd.c',
    'src/sys/io.c',
    'src/sys/proc.c',
    'src/sys/sched.c',
    'src/sys/syscall.c',
    'src/sys/syscall.S',
    'src/sys/vfs.c',
    'src/sys/vmm.c',
    'src/sys/vdso.c',
    'src/util/idmap.c',
    'src/util/list.c',
    'src/util/panic.c',
    'src/util/print.c',
    'src/util/spinlock.c',
    'src/util/time.c',
    'src/util/xarray.c',
    c_args: [
        '-ffreestanding',
        '-fno-pie',
        '-fno-stack-check',
        '-fno-stack-protector',
        '-mcmodel=kernel',
        '-mgeneral-regs-only',
        '-mno-red-zone',
    ],
    dependencies: proxutils,
    implicit_include_directories: false,
    include_directories: [api_inc, priv_inc, uacpi.get_variable('includes')],
    install: true,
    install_dir: '/boot',
    install_mode: 'rw-r--r--',
    install_tag: 'runtime',
    link_args: ['-nostdlib', '-static', '-T' + linker_script],
    link_depends: linker_script,
    objects: vdso_object,
    sources: lib_sources + uacpi.get_variable('sources'),
)
